@model List<Product>;
@{
    ViewData["Title"] = "Table Page";
    Layout = "~/Views/Table/_Layout.cshtml";
}


<div class="text-center">
    <h1 class="display-4">Store</h1>


    <div class="myTable">
        <table id = "table_1">

            <tr>
                <th>
                    ID
                    <a class="btn btn-primary, col-lg-3" asp-area="" asp-controller="Table" asp-action="AddProduct">
                        <span style="color: green; font-size: 24px; font-weight: bold;">+</span>
                    </a>
                </th>
                <th>Название</th>
                <th>Описание</th>
                <th>Цена шт.</th>
                <th>Количество</th>
                <th>Действие<br>(with form)</th>
                <th>Действие<br>(with JS)</th>
                <th>Действие<br>(with fetch)</th>
            </tr>

            @foreach (var product in Model)
            {
                var id = product.Id;
                <tr id="row_@id">
                    <td style="font-style: italic">@product.Id</td>
                    <td>
                        <div id="name_@id">@product.Name</div>
                    </td>
                    <td>
                        <div id="description_@id">@product.Description</div>
                    </td>
                    <td>
                        <div id="price_@id">@product.Price р.</div>
                    </td>
                    <td>
                        <div id="amount_@id">@product.Amount</div>
                    </td>
                    <td>
                        <a class="btn btn-primary, col-lg-3" asp-area="" asp-controller="Table"
                           asp-action="UpdateProduct"asp-route-productId="@product.Id">
                            ✎
                        </a>
                        <a class="btn btn-primary, col-lg-3" asp-area="" asp-controller="Table"
                           asp-action="DeleteProduct"asp-route-productId="@product.Id">
                            ❌
                        </a>
                    </td>
                    <td>
                        <button id="edit_button_@id" onclick="onEditButton(@id)">✎</button>
                        <button id="delete_button_@id" onclick="onDeleteClick(@id)">❌</button>
                    </td>
                    <td>
                        <button onclick="onCreateClick()">➕</button>
                        <button onclick="onEditClick_(@id)">✎</button>
                        <button onclick="onDeleteClick(@id)">❌</button>
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

@*Using fetch*@
<script>
    async function onDeleteClick(id){
        let response = await fetch(`delete-${id}`);
        if (response.ok){
             let rowToDelete = document.getElementById(`row_${id}`)
             rowToDelete.remove();
        } else {
            alert("Ошибка: " + response.status);
        }
    }
    
    async function onCreateClick()
    {
        addRow();
        
    }
       
    
    function addRow()
    {
       let table = document.getElementById("table_1");
       let rows = table.getElementsByTagName("tr");
       let lastRow = rows[rows.length - 1];
       let duplicateRow = lastRow.cloneNode(true);
       table.appendChild(duplicateRow)
       lastRow = rows[rows.length - 1];

       let cell = lastRow.getElementsByTagName("td");
       cell[0].innerHTML ++;
       let ID = cell[0].innerHTML;
       
           for (let i = 1; i < 5; i++) 
           {
             cell[i].innerHTML = ""; 
             addInputAndHideText(cell[cellID], ID, cellID, true);
           }
    }
    
     // let product  = {
     //       Name: 'Product Name',
     //       Description: 'Product Description',
     //       Price: 10,
     //       Amount: 100};
     // 
     // 
     //await fetch('add-product-json', {
     //     method: 'POST',
     //     headers: {
     //         'Content-Type': 'application/json'
     //     },
     //     body: JSON.stringify(product)
     // })

</script>

@*Using JS only*@
<script>  
   
    function onEditButton(ID)
    {
        let row = document.getElementById(`row_${ID}`);
        let cell = row.getElementsByTagName('td');
        
        for (let cellID = 1; cellID < 5; cellID++)
        {
            addInputAndHideText(cell[cellID], ID, cellID, true);
        }
        
        ReplaceEditButtons('edit_button', ID, 'OK');
        ReplaceEditButtons('delete_button', ID, 'Cancel');
    }
    
    function addInputAndHideText(cell, rowID, cellID, savePrevValue)
    {
        let input = document.createElement("input");
        input.id = `input_row_${rowID}_cell_${cellID}`;
        savePrevValue === true ? input.value = cell.innerText : "";
        cell.appendChild(input);
        cell.querySelector('div').style.display = 'none';
    }
    
    function ReplaceEditButtons(route, id, name)
    {
        let button = document.getElementById(`${route}_${id}`);
        let newButton = document.createElement("button");
        newButton.textContent = name;
        newButton.id = `${name}_button_${id}`;
        
        name === "OK" ? newButton.onclick = () => confirm(id, true) : null;
        name === "Cancel" ? newButton.onclick = () => confirm(id, false) : null;
        
        button.replaceWith(newButton);           
    }
    
    function ReturnEditButtons(id)
    {
        let OkButton = document.getElementById(`OK_button_${id}`)
        let newEditButton = document.createElement("button");
        newEditButton.textContent = "✎";
        newEditButton.id = `edit_button_${id}`;
        newEditButton.onclick = () =>onEditButton(id);
        
        let deleteButton = document.getElementById(`Cancel_button_${id}`)
        let newDeleteButton = document.createElement("button");
        newDeleteButton.textContent = "❌";
        newDeleteButton.id = `delete_button_${id}`;
        
        
        OkButton.replaceWith(newEditButton);
        deleteButton.replaceWith(newDeleteButton);
    }
    
    function confirm(id, bool)
    {
        let row = document.getElementById(`row_${id}`);
        let cell = row.getElementsByTagName('td');
        
        for (let cellID = 1; cellID < 5; cellID++)
        {
           let input = document.getElementById(`input_row_${id}_cell_${cellID}`);
           let element = cell[cellID].querySelector('div');
           
           if (bool)
           {
             element.innerText = input.value;
           }
           
           input.remove();
           element.style.display = '';
        }        
        
        ReturnEditButtons(id);
    }
    
</script>;